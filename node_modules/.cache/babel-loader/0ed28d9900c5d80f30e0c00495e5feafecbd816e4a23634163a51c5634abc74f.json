{"ast":null,"code":"import _classCallCheck from\"/Users/olgagerasimenko/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/olgagerasimenko/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"_checkReply\",value:function _checkReply(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};}},{key:\"getUserData\",value:function getUserData(){var _this=this;return fetch(\"\".concat(this._baseUrl,\"users/me\"),{method:'GET',headers:this._headers}).then(function(res){return _this._checkReply(res);});}},{key:\"updateUserData\",value:function updateUserData(data){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(function(res){return _this2._checkReply(res);});}},{key:\"updateAvatar\",value:function updateAvatar(data){var _this3=this;return fetch(\"\".concat(this._baseUrl,\"users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(function(res){return _this3._checkReply(res);});}},{key:\"getCards\",value:function getCards(){var _this4=this;return fetch(\"\".concat(this._baseUrl,\"cards\"),{method:'GET',headers:this._headers}).then(function(res){return _this4._checkReply(res);});}},{key:\"addNewCard\",value:function addNewCard(data){var _this5=this;return fetch(\"\".concat(this._baseUrl,\"cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(function(res){return _this5._checkReply(res);});}},{key:\"addLikeCard\",value:function addLikeCard(idCard){var _this6=this;return fetch(\"\".concat(this._baseUrl,\"cards/\").concat(idCard,\"/likes\"),{method:'PUT',headers:this._headers}).then(function(res){return _this6._checkReply(res);});}},{key:\"removeLikeCard\",value:function removeLikeCard(idCard){var _this7=this;return fetch(\"\".concat(this._baseUrl,\"cards/\").concat(idCard,\"/likes\"),{method:'DELETE',headers:this._headers}).then(function(res){return _this7._checkReply(res);});}},{key:\"deleteCard\",value:function deleteCard(idCard){return fetch(\"\".concat(this._baseUrl,\"cards//\").concat(idCard),{method:'DELETE',headers:this._headers});}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-65/',headers:{authorization:'36c21e13-089d-4ac8-bd26-b85419c729aa','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_baseUrl","_headers","_createClass","key","value","_checkReply","res","ok","json","Promise","reject","concat","status","getUserData","_this","fetch","method","then","updateUserData","data","_this2","body","JSON","stringify","name","about","updateAvatar","_this3","avatar","getCards","_this4","addNewCard","_this5","link","addLikeCard","idCard","_this6","removeLikeCard","_this7","deleteCard","api","authorization"],"sources":["/Users/olgagerasimenko/Desktop/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _checkReply(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            return Promise.reject(`Ошибка: ${res.status}`)\n        };\n    }\n\n    getUserData() {\n        return fetch(`${this._baseUrl}users/me`, {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    updateUserData(data) {\n        return fetch(`${this._baseUrl}users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    updateAvatar(data) {\n        return fetch(`${this._baseUrl}users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    getCards() {\n        return fetch(`${this._baseUrl}cards`, {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    addNewCard(data) {\n        return fetch(`${this._baseUrl}cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    addLikeCard(idCard) {\n        return fetch(`${this._baseUrl}cards/${idCard}/likes`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    removeLikeCard(idCard) {\n        return fetch(`${this._baseUrl}cards/${idCard}/likes`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    deleteCard(idCard) {\n        return fetch(`${this._baseUrl}cards//${idCard}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-65/',\n    headers: {\n        authorization: '36c21e13-089d-4ac8-bd26-b85419c729aa',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}