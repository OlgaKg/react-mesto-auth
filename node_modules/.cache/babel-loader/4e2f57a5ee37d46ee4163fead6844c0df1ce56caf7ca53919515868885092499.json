{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkReply(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    ;\n  }\n  getUserData() {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._checkReply(res);\n    });\n  }\n  updateUserData(data) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => {\n      return this._checkReply(res);\n    });\n  }\n  updateAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => {\n      return this._checkReply(res);\n    });\n  }\n  getCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._checkReply(res);\n    });\n  }\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      return this._checkReply(res);\n    });\n  }\n  addLikeCard(idCard) {\n    return fetch(`${this._baseUrl}cards/${idCard}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._checkReply(res);\n    });\n  }\n  removeLikeCard(idCard) {\n    return fetch(`${this._baseUrl}cards/${idCard}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkReply(res);\n    });\n  }\n  deleteCard(idCard) {\n    return fetch(`${this._baseUrl}cards/${idCard}`, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-65/',\n  headers: {\n    authorization: '36c21e13-089d-4ac8-bd26-b85419c729aa',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_checkReply","res","ok","json","Promise","reject","status","getUserData","fetch","method","then","updateUserData","data","body","JSON","stringify","name","about","updateAvatar","avatar","getCards","addNewCard","link","addLikeCard","idCard","removeLikeCard","deleteCard","api","authorization"],"sources":["/Users/olgagerasimenko/Desktop/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _checkReply(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            return Promise.reject(`Ошибка: ${res.status}`)\n        };\n    }\n\n    getUserData() {\n        return fetch(`${this._baseUrl}users/me`, {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    updateUserData(data) {\n        return fetch(`${this._baseUrl}users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    updateAvatar(data) {\n        return fetch(`${this._baseUrl}users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    getCards() {\n        return fetch(`${this._baseUrl}cards`, {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    addNewCard(data) {\n        return fetch(`${this._baseUrl}cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    addLikeCard(idCard) {\n        return fetch(`${this._baseUrl}cards/${idCard}/likes`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    removeLikeCard(idCard) {\n        return fetch(`${this._baseUrl}cards/${idCard}/likes`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._checkReply(res)\n            })\n    }\n\n    deleteCard(idCard) {\n        return fetch(`${this._baseUrl}cards/${idCard}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-65/',\n    headers: {\n        authorization: '36c21e13-089d-4ac8-bd26-b85419c729aa',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}