{"ast":null,"code":"var _jsxFileName = \"/Users/olgagerasimenko/Desktop/dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { AppContext } from '../contexts/AppContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isImgPopupOpen, setIsImgPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || isImgPopupOpen;\n  const [isLoading, setIsLoading] = React.useState(false);\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsImgPopupOpen(true);\n  }\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setIsImgPopupOpen(false);\n    setIsLoading(false);\n  }\n\n  // можно сделать универсальную функцию, которая принимает функцию запроса\n  function handleSubmit(request) {\n    // изменяем текст кнопки до вызова запроса\n    setIsLoading(true);\n    request()\n    // закрывать попап нужно только в `then`\n    .then(closeAllPopups)\n    // в каждом запросе нужно ловить ошибку\n    // console.error обычно используется для логирования ошибок, если никакой другой обработки ошибки нет\n    .catch(console.error)\n    // в каждом запросе в `finally` нужно возвращать обратно начальный текст кнопки\n    .finally(() => setIsLoading(false));\n  }\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      document.addEventListener('keydown', closeByEscape);\n      return () => {\n        document.removeEventListener('keydown', closeByEscape);\n      };\n    }\n  }, [isOpen]);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // function handleUpdateUser(data) {\n  //     setIsLoading(true);\n  //     api.updateUserData(data)\n  //         .then((newUserData) => {\n  //             setCurrentUser(newUserData);\n  //             closeAllPopups()\n  //         }).catch((err) => { console.log(err) })\n  //         .finally(() => {\n  //             setIsLoading(false)\n  //         })\n  // }\n\n  function handleUpdateUser(inputValues) {\n    function makeRequest() {\n      return api.updateUserData(inputValues).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n  function handleUpdateAvatar(inputValues) {\n    function makeRequest() {\n      return api.updateAvatar(inputValues).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n  // function handleUpdateAvatar(data) {\n  //     setIsLoading(true);\n  //     api.updateAvatar(data)\n  //         .then((newAvatar) => {\n  //             setCurrentUser(newAvatar);\n  //             closeAllPopups()\n  //         }).catch((err) => { console.log(err) })\n  //         .finally(() => {\n  //             setIsLoading(false)\n  //         })\n  // }\n\n  function handleAddPlaceSubmit(inputValues) {\n    function makeRequest(newCard) {\n      return api.addNewCard(inputValues).then(setCards([newCard, ...cards]));\n    }\n    handleSubmit(makeRequest);\n  }\n  // function handleAddPlaceSubmit(data) {\n  //     setIsLoading(true);\n  //     api.addNewCard(data)\n  //         .then((newCard) => {\n  //             setCards([newCard, ...cards]);\n  //             closeAllPopups()\n  //         }).catch((err) => { console.log(err) })\n  //         .finally(() => {\n  //             setIsLoading(false)\n  //         })\n  // }\n\n  useEffect(() => {\n    Promise.all([api.getUserData(), api.getCards()]).then(_ref => {\n      let [userData, initialCards] = _ref;\n      setCurrentUser(userData);\n      setCards(initialCards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      isLoading,\n      closeAllPopups\n    },\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          cards: cards,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          isOpen: isImgPopupOpen,\n          card: selectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"SbaBMns5lu1DuKGQ1olEHMCWu0Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Main","Footer","ImagePopup","CurrentUserContext","AppContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","jsxDEV","_jsxDEV","App","_s","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImgPopupOpen","setIsImgPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","isOpen","isLoading","setIsLoading","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleSubmit","request","then","catch","console","error","finally","closeByEscape","evt","key","document","addEventListener","removeEventListener","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","err","log","handleCardDelete","deleteCard","filter","handleUpdateUser","inputValues","makeRequest","updateUserData","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","addNewCard","Promise","all","getUserData","getCards","_ref","userData","initialCards","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onCardLike","onCardDelete","onUpdateAvatar","onUpdateUser","_c","$RefreshReg$"],"sources":["/Users/olgagerasimenko/Desktop/dev/mesto-react/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { AppContext } from '../contexts/AppContext'\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n    const [isImgPopupOpen, setIsImgPopupOpen] = useState(false)\n    const [selectedCard, setSelectedCard] = useState({});\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || isImgPopupOpen;\n    const [isLoading, setIsLoading] = React.useState(false);\n\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setIsImgPopupOpen(true)\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setIsImgPopupOpen(false);\n        setIsLoading(false);\n    }\n\n    // можно сделать универсальную функцию, которая принимает функцию запроса\nfunction handleSubmit(request) {\n    // изменяем текст кнопки до вызова запроса\n    setIsLoading(true);\n    request()\n      // закрывать попап нужно только в `then`\n      .then(closeAllPopups)\n      // в каждом запросе нужно ловить ошибку\n      // console.error обычно используется для логирования ошибок, если никакой другой обработки ошибки нет\n      .catch(console.error)\n      // в каждом запросе в `finally` нужно возвращать обратно начальный текст кнопки\n      .finally(() => setIsLoading(false));\n  }\n\n    useEffect(() => {\n        function closeByEscape(evt) {\n            if (evt.key === 'Escape') {\n                closeAllPopups();\n            }\n        }\n        if (isOpen) {\n            document.addEventListener('keydown', closeByEscape);\n            return () => {\n                document.removeEventListener('keydown', closeByEscape);\n            }\n        }\n    }, [isOpen])\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            }).catch((err) => { console.log(err) });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c._id !== card._id));\n            }).catch((err) => { console.log(err) });\n    }\n\n    // function handleUpdateUser(data) {\n    //     setIsLoading(true);\n    //     api.updateUserData(data)\n    //         .then((newUserData) => {\n    //             setCurrentUser(newUserData);\n    //             closeAllPopups()\n    //         }).catch((err) => { console.log(err) })\n    //         .finally(() => {\n    //             setIsLoading(false)\n    //         })\n    // }\n\n  function handleUpdateUser(inputValues) {\n    function makeRequest() {\n      return api.updateUserData(inputValues).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n\n  function handleUpdateAvatar(inputValues) {\n    function makeRequest() {\n      return api.updateAvatar(inputValues).then(setCurrentUser);\n    }\n    handleSubmit(makeRequest);\n  }\n    // function handleUpdateAvatar(data) {\n    //     setIsLoading(true);\n    //     api.updateAvatar(data)\n    //         .then((newAvatar) => {\n    //             setCurrentUser(newAvatar);\n    //             closeAllPopups()\n    //         }).catch((err) => { console.log(err) })\n    //         .finally(() => {\n    //             setIsLoading(false)\n    //         })\n    // }\n\n    function handleAddPlaceSubmit(inputValues) {\n        function makeRequest(newCard) {\n          return api.addNewCard(inputValues).then(setCards([newCard,...cards]));\n        }\n        handleSubmit(makeRequest);\n      }\n    // function handleAddPlaceSubmit(data) {\n    //     setIsLoading(true);\n    //     api.addNewCard(data)\n    //         .then((newCard) => {\n    //             setCards([newCard, ...cards]);\n    //             closeAllPopups()\n    //         }).catch((err) => { console.log(err) })\n    //         .finally(() => {\n    //             setIsLoading(false)\n    //         })\n    // }\n\n\n    \n    \n    \n\n\n\n\n\n    useEffect(() => {\n        Promise.all([api.getUserData(), api.getCards()])\n            .then(([userData, initialCards]) => {\n                setCurrentUser(userData);\n                setCards(initialCards);\n            }).catch((err) => { console.log(err) });\n    }, []);\n\n    return (\n        <AppContext.Provider value={{ isLoading, closeAllPopups }}>\n            <CurrentUserContext.Provider value={currentUser}>\n                <div className=\"page\">\n                    <Header />\n                    <Main\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        cards={cards}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                    <Footer />\n\n                    <EditAvatarPopup\n                        isOpen={isEditAvatarPopupOpen}\n                        onUpdateAvatar={handleUpdateAvatar} />\n\n                    <EditProfilePopup\n                        isOpen={isEditProfilePopupOpen}\n                        onUpdateUser={handleUpdateUser} />\n\n                    <AddPlacePopup\n                        isOpen={isAddPlacePopupOpen}\n                        onAddPlace={handleAddPlaceSubmit} />\n\n                    <ImagePopup\n                        isOpen={isImgPopupOpen}\n                        card={selectedCard} />\n                </div>\n            </CurrentUserContext.Provider>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}